/**
 * Copyright 2015 Christian Dreher (christian.dreher@student.kit.edu)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <nddlgen/models/Arm.h>

namespace nddlgen { namespace models
{

	Arm::Arm()
	{
		this->setClassName("Arm");

		this->_controllerMeta = nullptr;
		this->_workspace = nullptr;
	}

	Arm::~Arm()
	{
		delete this->_workspace;
	}


	void Arm::generateModel(std::ofstream& ofStream)
	{
		std::string ws = this->_workspace->getNamePref();
		std::string wsp = this->_workspace->getNamePrefSuff();

		// Disclaimer / Meta
		wrln(0, "// NDDL model file generated by nddl-generator-core v" +
				this->_controllerMeta->nddlgenVersion +
				" by Christian Dreher (more info at: nddlgen.charlydelta.org)", 1);

		wrln(0, "// File name: \"" + this->_controllerMeta->outputFileModels + "\"", 1);
		wrln(0, "// Generated from file: \"" + this->_controllerMeta->inputFile + "\"", 2);

		// Write Workspace class
		this->_workspace->generateModel(ofStream);

		// #\t  text										#endl
		wrln(0, "class Arm", 								1);
		wrln(0, "{", 										1);
		wrln(1, 	"Workspace " + ws + ";",				2);

		wrln(1, 	"Arm(Workspace " + wsp + ")",			1);
		wrln(1, 	"{",									1);
		wrln(2,			ws + " = " + wsp + ";",				1);
		wrln(1, 	"}",									2);

		wrln(0, "}",										2);

		// Write Arm member functions
	}

	void Arm::generateInitialState(std::ofstream& ofStream)
	{
		//ofStream << this->_workspace->generateInitialStateAsString(ofStream);
	}


	void Arm::setWorkspace(nddlgen::models::Workspace* workspace)
	{
		this->_workspace = workspace;
	}

	nddlgen::models::Workspace* Arm::getWorkspace()
	{
		return this->_workspace;
	}

	void Arm::setControllerMeta(nddlgen::utilities::ControllerMeta* controllerMeta)
	{
		this->_controllerMeta = controllerMeta;
	}

}}
