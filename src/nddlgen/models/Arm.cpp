/**
 * Copyright 2015 Christian Dreher (christian.dreher@student.kit.edu)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <nddlgen/models/Arm.h>
#include <nddlgen/Controller.h>

namespace nddlgen { namespace models
{

	Arm::Arm()
	{
		this->_workspace = nullptr;
	}

	Arm::~Arm()
	{
		delete this->_workspace;
	}


	void Arm::generateModelAsString(std::ofstream& ofStream)
	{
		// Disclaimer
		ofStream << "// Generated by nddl-generator-core v" <<
				nddlgen::Controller::NDDLGEN_VERSION <<
				" by Christian Dreher" << std::endl << std::endl;

		// Write Workspace class
		this->_workspace->generateModelAsString(ofStream);

		ofStream << std::endl;

		// Write Arm class
		ofStream << "class Arm" << std::endl;
		ofStream << "{" << std::endl;

		ofStream << 	"\tWorkspace _ws;" << std::endl << std::endl;

		ofStream << 	"\tArm(Workspace ws)" << std::endl;
		ofStream << 	"\t{" << std::endl;
		ofStream << 		"\t\t_ws = ws;" << std::endl;
		ofStream <<		"\t}" << std::endl << std::endl;

		ofStream << "}" << std::endl << std::endl;

		// Write Arm functions
	}

	void Arm::generateInitialStateAsString(std::ofstream& ofStream)
	{
		//ofStream << this->_workspace->generateInitialStateAsString(ofStream);
	}


	void Arm::setWorkspace(nddlgen::models::Workspace* workspace)
	{
		this->_workspace = workspace;
	}

	nddlgen::models::Workspace* Arm::getWorkspace()
	{
		return this->_workspace;
	}

}}
